{"version":3,"file":"main.facc64bf.iframe.bundle.js","mappings":";;;AAOA;;;;;;;;;;;;;;;;;;;ACEA;;;;;;;;;;;;;;;;;;;;;ACJA;;;;;ACIA;;;;AAMA;;;AAKA;;;;;;;;;;;;AAYA;;;ACzBA","sources":["webpack://react-app/./src/components/Button/styled.js","webpack://react-app/./src/components/FormModal/styled.js","webpack://react-app/./src/components/InputFood/index.js","webpack://react-app/./src/components/FoodCard/styled.js","webpack://react-app/./src/components/FoodCard/index.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport {pxToRem} from '../../utils/unit';\n\nconst StyledButton = styled.button`\n\tpadding: 0.5em 1em;\n\tborder: 1px solid rgba(0, 0, 0, 0.3);\n\tborder-radius: ${pxToRem(4)};\n\tbackground: #fae;\n\tcolor: #000;\n\tfont-size: 1em;\n\n\t&:hover {\n\t\tbackground: #d8b;\n\t}\n\n\t&:active {\n\t\tbackground: #bad;\n\t}\n`;\n\nexport default StyledButton;\n","import styled from 'styled-components';\n\nconst ModalContainer = styled.section`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: rgba(0, 0, 0, 0.5); ;\n`;\n\nconst Modal = styled.dialog`\n\tmax-width: 480px;\n\tmargin: 0 auto;\n\tpadding: 30px;\n\tborder-radius: 10px;\n\tbackground: #fff;\n`;\n\nexport {ModalContainer, Modal};\n","import {nanoid} from 'nanoid';\nimport {useState} from 'react';\n\nimport {InputFoodContainer} from './styled';\n\nexport default function InputFood({addNewFoodItem, setSubmittedFoodInput, setSubmittedTimeInput}) {\n\tconst [enteredAmount, setEnteredAmount] = useState(0);\n\tconst [enteredTime, setEnteredTime] = useState('08:00');\n\n\tconst resetHandler = () => {\n\t\tsetEnteredAmount(0);\n\t\tsetEnteredTime('');\n\t};\n\n\tconst submitHandler = event => {\n\t\tevent.preventDefault();\n\t\tconst newFoodInput = {\n\t\t\tid: nanoid(),\n\t\t\tamount: parseInt(enteredAmount),\n\t\t\ttime: enteredTime,\n\t\t};\n\t\taddNewFoodItem(newFoodInput);\n\t\tresetHandler();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<InputFoodContainer>\n\t\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t\t<h4>Your dog</h4>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tHow many gram did the dog eat\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\tvalue={enteredAmount}\n\t\t\t\t\t\t\t\tonChange={event => setEnteredAmount(event.target.value)}\n\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tWhen did the dog eat\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"time\"\n\t\t\t\t\t\t\t\tvalue={enteredTime}\n\t\t\t\t\t\t\t\tonChange={event => setEnteredTime(event.target.value)}\n\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<button type=\"submit\">Add</button>\n\t\t\t\t\t</section>\n\t\t\t\t</form>\n\t\t\t</InputFoodContainer>\n\t\t</>\n\t);\n}\n","import styled from 'styled-components';\n\nimport {pxToRem} from '../../utils/unit';\n\nconst FoodCardContainer = styled.section`\n\tmargin: 2em;\n\tpadding: 0.2em 1em;\n\tborder: 1px solid black;\n\tborder-radius: 10px;\n`;\n\nconst FoodCardHead = styled.section`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n`;\n\nconst FoodCardButton = styled.button`\n\tpadding: 0.5em 1em;\n\tborder: none;\n\tborder-radius: ${pxToRem(4)};\n\tbackground: #343d46;\n\tcolor: white;\n\tfont-size: 1em;\n\n\t&:hover {\n\t\tbackground: grey;\n\t}\n\n\t&:active {\n\t\tbackground: #bad;\n\t}\n`;\n\nconst FoodInfoContainer = styled.section`\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nexport {FoodCardContainer, FoodCardButton, FoodInfoContainer, FoodCardHead};\n","import {useState} from 'react';\n\nimport FormModal from '../FormModal';\nimport InputFood from '../InputFood/index.js';\n\nimport {FoodCardContainer, FoodCardButton, FoodInfoContainer, FoodCardHead} from './styled';\n\nexport default function FoodCard({goalAmount}) {\n\tconst [foodItems, setFoodItems] = useState([]);\n\tconst [showForm, setShowForm] = useState(false);\n\n\tfunction addNewFoodItem(prevItem) {\n\t\tconst newFoodItems = [...foodItems, prevItem];\n\t\tsetFoodItems(newFoodItems);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<FoodCardContainer>\n\t\t\t\t<FoodCardHead>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<h2>Food</h2>\n\t\t\t\t\t\t<h3>Type of food</h3>\n\t\t\t\t\t\t<p>Goal: {goalAmount} gram</p>\n\t\t\t\t\t</section>\n\t\t\t\t\t<FoodCardButton\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetShowForm(!showForm);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{showForm ? '-' : '+'}\n\t\t\t\t\t</FoodCardButton>\n\t\t\t\t</FoodCardHead>\n\t\t\t\t{foodItems.map(item => (\n\t\t\t\t\t<FoodInfoContainer key={item.id}>\n\t\t\t\t\t\t<p>How much: {item.amount} gram</p>\n\t\t\t\t\t\t<p>At: {item.time}</p>\n\t\t\t\t\t</FoodInfoContainer>\n\t\t\t\t))}\n\t\t\t</FoodCardContainer>\n\t\t\t{showForm && (\n\t\t\t\t<FormModal>\n\t\t\t\t\t<InputFood\n\t\t\t\t\t\taddNewFoodItem={addNewFoodItem}\n\t\t\t\t\t></InputFood>\n\t\t\t\t</FormModal>\n\t\t\t)}\n\t\t</>\n\t);\n}\n"],"names":[],"sourceRoot":""}