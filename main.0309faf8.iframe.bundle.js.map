{"version":3,"file":"main.0309faf8.iframe.bundle.js","mappings":";;;AAOA;;;;;;;;;;;;;;;;;;;ACEA;;;;;;;;;;;;;ACEA;;;;;;;;AAUA;;;;;AAOA;;;AAKA;;;;;;;;;;;AC/BA;;;;;;;;;;;;;;;ACGA;;;;;ACIA;;;;AAMA;;;AAKA;;;;;;;;;;;;AAYA;;;ACxBA","sources":["webpack://react-app/./src/components/Button/styled.js","webpack://react-app/./src/components/FormModal/styled.js","webpack://react-app/./src/components/HistoryModal/styled.js","webpack://react-app/./src/components/HistoryModal/index.js","webpack://react-app/./src/components/InputFood/index.js","webpack://react-app/./src/components/FoodCard/styled.js","webpack://react-app/./src/components/FoodCard/index.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport {pxToRem} from '../../utils/unit';\n\nconst StyledButton = styled.button`\n\tpadding: 0.5em 1em;\n\tborder: 1px solid rgba(0, 0, 0, 0.3);\n\tborder-radius: ${pxToRem(4)};\n\tbackground: #fae;\n\tcolor: #000;\n\tfont-size: 1em;\n\n\t&:hover {\n\t\tbackground: #d8b;\n\t}\n\n\t&:active {\n\t\tbackground: #bad;\n\t}\n`;\n\nexport default StyledButton;\n","import styled from 'styled-components';\n\nconst ModalContainer = styled.section`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: rgba(0, 0, 0, 0.5); ;\n`;\n\nconst Modal = styled.dialog`\n\tmax-width: 480px;\n\tmargin: 0 auto;\n\tpadding: 30px;\n\tborder-radius: 10px;\n\tbackground: #fff;\n`;\n\nexport {ModalContainer, Modal};\n","import styled from 'styled-components';\n\nimport {pxToRem} from '../../utils/unit';\n\nconst ModalContainer = styled.section`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: rgba(0, 0, 0, 0.5);\n`;\n\nconst Modal = styled.dialog`\n\tmax-width: 90%;\n\tmax-height: 70%;\n\tpadding: 2em;\n\toverflow: hidden;\n\toverflow-y: scroll !important;\n\tborder-radius: 10px;\n\tbackground: #fff;\n`;\n\nconst StyledHistoryModalHeader = styled.section`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tgap: 1em;\n`;\n\nconst StyledHistoryModalButton = styled.button`\n\tpadding: 0.2em 0.5em;\n\tborder: none;\n\tborder-radius: ${pxToRem(4)};\n\tbackground: #343d46;\n\tcolor: white;\n\tfont-size: 1em;\n\t&:hover {\n\t\tbackground: grey;\n\t}\n\n\t&:active {\n\t\tbackground: #bad;\n\t}\n`;\n\nexport {ModalContainer, Modal, StyledHistoryModalHeader, StyledHistoryModalButton};\n","import {ModalContainer, Modal, StyledHistoryModalHeader, StyledHistoryModalButton} from './styled';\n\nexport default function HistoryModal({children, onCancelHistoryForm}) {\n\treturn (\n\t\t<ModalContainer>\n\t\t\t<Modal open>\n\t\t\t\t<StyledHistoryModalHeader>\n\t\t\t\t\t<h2>History</h2>\n\t\t\t\t\t<StyledHistoryModalButton type=\"button\" onClick={onCancelHistoryForm}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</StyledHistoryModalButton>\n\t\t\t\t</StyledHistoryModalHeader>\n\t\t\t\t{children}\n\t\t\t</Modal>\n\t\t</ModalContainer>\n\t);\n}\n","import {nanoid} from 'nanoid';\nimport {useState} from 'react';\n\nimport {InputFoodContainer} from './styled';\n\nexport default function InputFood({addNewFoodItem, cancelForm, addLastSubmittedItem}) {\n\tconst [enteredAmount, setEnteredAmount] = useState(0);\n\tconst [enteredTime, setEnteredTime] = useState('08:00');\n\tconst [enteredDate, setEnteredDate] = useState('');\n\tconst [message, setMessage] = useState('');\n\n\tconst submitHandler = event => {\n\t\tevent.preventDefault();\n\t\tconst newFoodInput = {\n\t\t\tid: nanoid(),\n\t\t\tamount: parseInt(enteredAmount),\n\t\t\ttime: enteredTime,\n\t\t\tdate: new Date(enteredDate).toDateString(),\n\t\t};\n\t\taddLastSubmittedItem(newFoodInput);\n\t\taddNewFoodItem(newFoodInput);\n\t\tsetMessage(\n\t\t\t`Your dog last ate ${newFoodInput.amount} gram at ${newFoodInput.time} o'clock on ${newFoodInput.date}! Your dog will forever be grateful!`\n\t\t);\n\t\tsetEnteredTime('08:00');\n\t\tsetEnteredAmount(0);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<InputFoodContainer>\n\t\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t\t<h4>Your dog</h4>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tHow many gram did the dog eat\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\tvalue={enteredAmount}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tonChange={event => setEnteredAmount(event.target.value)}\n\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tWhen did the dog eat\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"time\"\n\t\t\t\t\t\t\t\tvalue={enteredTime}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tonChange={event => setEnteredTime(event.target.value)}\n\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<label htmlFor=\"date\">Date of Food</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"date\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tmin=\"2022-07-01\"\n\t\t\t\t\t\t\tmax=\"2022-12-31\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tonChange={event => setEnteredDate(event.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<button type=\"submit\">Add</button>\n\t\t\t\t\t\t<button type=\"button\" onClick={cancelForm}>\n\t\t\t\t\t\t\tcancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</section>\n\t\t\t\t</form>\n\t\t\t\t<h4>Last submit</h4>\n\t\t\t\t<p>{message}</p>\n\t\t\t</InputFoodContainer>\n\t\t</>\n\t);\n}\n","import styled from 'styled-components';\n\nimport {pxToRem} from '../../utils/unit';\n\nconst FoodCardContainer = styled.section`\n\tmargin: 2em;\n\tpadding: 0.2em 1em;\n\tborder: 1px solid black;\n\tborder-radius: 10px;\n`;\n\nconst FoodCardHead = styled.section`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n`;\n\nconst FoodCardButton = styled.button`\n\tpadding: 0.5em 1em;\n\tborder: none;\n\tborder-radius: ${pxToRem(4)};\n\tbackground: #343d46;\n\tcolor: white;\n\tfont-size: 1em;\n\n\t&:hover {\n\t\tbackground: grey;\n\t}\n\n\t&:active {\n\t\tbackground: #bad;\n\t}\n`;\n\nconst FoodInfoContainer = styled.section`\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nexport {FoodCardContainer, FoodCardButton, FoodInfoContainer, FoodCardHead};\n","import {useState} from 'react';\n\nimport FormModal from '../FormModal';\nimport HistoryModal from '../HistoryModal';\nimport InputFood from '../InputFood/index.js';\n\nimport {FoodCardContainer, FoodCardButton, FoodInfoContainer, FoodCardHead} from './styled';\n\nexport default function FoodCard({goalAmount}) {\n\tconst [showForm, setShowForm] = useState(false);\n\tconst [showHistory, setShowHistory] = useState(false);\n\tconst [foodItems, setFoodItems] = useState([]);\n\tconst [lastSubmittedFoodItem, setLastSubmittedFoodItem] = useState({});\n\n\tconst dates = foodItems.map(foodItem => foodItem.date);\n\tconst uniqueDates = [...new Set(dates)];\n\n\tfunction addNewFoodItem(prevItem) {\n\t\tconst newFoodItems = [...foodItems, prevItem];\n\t\tsetFoodItems(newFoodItems);\n\t}\n\n\tfunction addLastSubmittedItem(prevItem) {\n\t\tconst newItem = {...foodItems, ...prevItem};\n\t\tsetLastSubmittedFoodItem(newItem);\n\t}\n\n\tfunction cancelForm() {\n\t\tsetShowForm(!showForm);\n\t}\n\n\tfunction onCancelHistoryForm() {\n\t\tsetShowHistory(!showHistory);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<FoodCardContainer>\n\t\t\t\t<FoodCardHead>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<h2>Food</h2>\n\t\t\t\t\t\t<h3>Type of food</h3>\n\t\t\t\t\t\t<p>Goal: {goalAmount} gram</p>\n\t\t\t\t\t</section>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetShowHistory(!showHistory);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{showHistory ? 'Hide History' : 'Show History'}\n\t\t\t\t\t</button>\n\t\t\t\t\t<FoodCardButton\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetShowForm(!showForm);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{showForm ? '-' : '+'}\n\t\t\t\t\t</FoodCardButton>\n\t\t\t\t</FoodCardHead>\n\t\t\t\t<FoodInfoContainer>\n\t\t\t\t\t<p>How much: {lastSubmittedFoodItem.amount} gram</p>\n\t\t\t\t\t<p>At: {lastSubmittedFoodItem.time}</p>\n\t\t\t\t</FoodInfoContainer>\n\t\t\t</FoodCardContainer>\n\t\t\t{showForm && (\n\t\t\t\t<FormModal>\n\t\t\t\t\t<InputFood\n\t\t\t\t\t\taddNewFoodItem={addNewFoodItem}\n\t\t\t\t\t\tcancelForm={cancelForm}\n\t\t\t\t\t\taddLastSubmittedItem={addLastSubmittedItem}\n\t\t\t\t\t></InputFood>\n\t\t\t\t</FormModal>\n\t\t\t)}\n\t\t\t{showHistory && (\n\t\t\t\t<HistoryModal onCancelHistoryForm={onCancelHistoryForm}>\n\t\t\t\t\t{uniqueDates\n\t\t\t\t\t\t.sort((a, b) => new Date(b) - new Date(a))\n\t\t\t\t\t\t.map(date => (\n\t\t\t\t\t\t\t<section key={date}>\n\t\t\t\t\t\t\t\t<h2>{date}</h2>\n\t\t\t\t\t\t\t\t{foodItems\n\t\t\t\t\t\t\t\t\t.filter(food => food.date === date)\n\t\t\t\t\t\t\t\t\t.map(food => (\n\t\t\t\t\t\t\t\t\t\t<section key={food.id}>\n\t\t\t\t\t\t\t\t\t\t\t<p>Amount: {food.amount}</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>When: {food.time}</p>\n\t\t\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t))}\n\t\t\t\t</HistoryModal>\n\t\t\t)}\n\t\t</>\n\t);\n}\n"],"names":[],"sourceRoot":""}